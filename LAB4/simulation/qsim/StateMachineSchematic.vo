// Copyright (C) 2019  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 19.1.0 Build 670 09/22/2019 SJ Lite Edition"

// DATE "02/10/2022 13:57:00"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module StateMachineSchematic (
	red,
	clk,
	Xmas,
	C,
	reset,
	green,
	blue,
	Q);
output 	red;
input 	clk;
input 	Xmas;
input 	C;
input 	reset;
output 	green;
output 	blue;
output 	[1:0] Q;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \red~output_o ;
wire \green~output_o ;
wire \blue~output_o ;
wire \Q[1]~output_o ;
wire \Q[0]~output_o ;
wire \clk~input_o ;
wire \inst5|10~0_combout ;
wire \reset~input_o ;
wire \inst5|10~q ;
wire \C~input_o ;
wire \Xmas~input_o ;
wire \inst3~0_combout ;
wire \inst5|9~q ;
wire \inst10~combout ;


cyclonev_io_obuf \red~output (
	.i(!\inst10~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\red~output_o ),
	.obar());
// synopsys translate_off
defparam \red~output .bus_hold = "false";
defparam \red~output .open_drain_output = "false";
defparam \red~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \green~output (
	.i(\inst5|10~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\green~output_o ),
	.obar());
// synopsys translate_off
defparam \green~output .bus_hold = "false";
defparam \green~output .open_drain_output = "false";
defparam \green~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \blue~output (
	.i(\inst5|9~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\blue~output_o ),
	.obar());
// synopsys translate_off
defparam \blue~output .bus_hold = "false";
defparam \blue~output .open_drain_output = "false";
defparam \blue~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Q[1]~output (
	.i(\inst5|9~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \Q[1]~output .bus_hold = "false";
defparam \Q[1]~output .open_drain_output = "false";
defparam \Q[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Q[0]~output (
	.i(\inst5|10~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \Q[0]~output .bus_hold = "false";
defparam \Q[0]~output .open_drain_output = "false";
defparam \Q[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \inst5|10~0 (
// Equation(s):
// \inst5|10~0_combout  = !\inst10~combout 

	.dataa(!\inst10~combout ),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst5|10~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst5|10~0 .extended_lut = "off";
defparam \inst5|10~0 .lut_mask = 64'hAAAAAAAAAAAAAAAA;
defparam \inst5|10~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \reset~input (
	.i(reset),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\reset~input_o ));
// synopsys translate_off
defparam \reset~input .bus_hold = "false";
defparam \reset~input .simulate_z_as = "z";
// synopsys translate_on

dffeas \inst5|10 (
	.clk(\clk~input_o ),
	.d(\inst5|10~0_combout ),
	.asdata(vcc),
	.clrn(\reset~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst5|10~q ),
	.prn(vcc));
// synopsys translate_off
defparam \inst5|10 .is_wysiwyg = "true";
defparam \inst5|10 .power_up = "low";
// synopsys translate_on

cyclonev_io_ibuf \C~input (
	.i(C),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\C~input_o ));
// synopsys translate_off
defparam \C~input .bus_hold = "false";
defparam \C~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \Xmas~input (
	.i(Xmas),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\Xmas~input_o ));
// synopsys translate_off
defparam \Xmas~input .bus_hold = "false";
defparam \Xmas~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \inst3~0 (
// Equation(s):
// \inst3~0_combout  = (!\inst5|10~q  & (\inst5|9~q  & (\C~input_o ))) # (\inst5|10~q  & (((!\Xmas~input_o ) # (\C~input_o ))))

	.dataa(!\inst5|9~q ),
	.datab(!\inst5|10~q ),
	.datac(!\C~input_o ),
	.datad(!\Xmas~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst3~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst3~0 .extended_lut = "off";
defparam \inst3~0 .lut_mask = 64'h3707370737073707;
defparam \inst3~0 .shared_arith = "off";
// synopsys translate_on

dffeas \inst5|9 (
	.clk(\clk~input_o ),
	.d(\inst3~0_combout ),
	.asdata(vcc),
	.clrn(\reset~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst5|9~q ),
	.prn(vcc));
// synopsys translate_off
defparam \inst5|9 .is_wysiwyg = "true";
defparam \inst5|9 .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb inst10(
// Equation(s):
// \inst10~combout  = (\inst5|10~q ) # (\inst5|9~q )

	.dataa(!\inst5|9~q ),
	.datab(!\inst5|10~q ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst10~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam inst10.extended_lut = "off";
defparam inst10.lut_mask = 64'h7777777777777777;
defparam inst10.shared_arith = "off";
// synopsys translate_on

assign red = \red~output_o ;

assign green = \green~output_o ;

assign blue = \blue~output_o ;

assign Q[1] = \Q[1]~output_o ;

assign Q[0] = \Q[0]~output_o ;

endmodule
